"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCheckedFunctionDeclaration = exports.isIntrinsicType = exports.isObjectType = exports.isLekkoConfigFile = exports.LEKKO_FILENAME_REGEX = void 0;
const tslib_1 = require("tslib");
const typescript_1 = tslib_1.__importDefault(require("typescript"));
const node_path_1 = tslib_1.__importDefault(require("node:path"));
// TODO: We should allow users to specify location
// **/lekko/<namespace>.ts, namespace must be kebab-case alphanumeric
exports.LEKKO_FILENAME_REGEX = /lekko\/([a-z][a-z0-9-]*)\.ts$/;
function isLekkoConfigFile(filePath, configSrcPath = "./src/lekko") {
    return (node_path_1.default.resolve(node_path_1.default.dirname(filePath)) === node_path_1.default.resolve(configSrcPath) &&
        exports.LEKKO_FILENAME_REGEX.test(filePath));
}
exports.isLekkoConfigFile = isLekkoConfigFile;
function isObjectType(type) {
    return (type.flags & typescript_1.default.TypeFlags.Object) > 0 && "objectFlags" in type;
}
exports.isObjectType = isObjectType;
function isIntrinsicType(type) {
    return (type.flags & typescript_1.default.TypeFlags.Intrinsic) > 0 && "intrinsicName" in type;
}
exports.isIntrinsicType = isIntrinsicType;
function isCheckedFunctionDeclaration(node) {
    return node.name !== undefined && node.body !== undefined;
}
exports.isCheckedFunctionDeclaration = isCheckedFunctionDeclaration;
//# sourceMappingURL=helpers.js.map