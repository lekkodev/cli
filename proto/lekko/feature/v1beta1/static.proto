// Copyright 2022 Lekko Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package lekko.feature.v1beta1;

import "lekko/feature/v1beta1/feature.proto";

message StaticFeature {
  string key = 1;
  string description = 2;
  lekko.feature.v1beta1.FeatureType type = 3;

  repeated ImportStatement imports = 4;

  // For backwards compatibility
  lekko.feature.v1beta1.Feature feature = 5;
}

// An assignment expression in starlark, e.g. `x = 1`.
message ImportStatement {
  Comments comments = 1;
  // the variable that the import is assigned to
  IdentExpr lhs = 2;
  string operator = 3; // e.g. `=`
  bool line_break = 4; // Line break between operator and RHS
  ImportExpr rhs = 5;
}

// an import expression, e.g. `proto.package("google.protobuf")`
message ImportExpr {
  Comments comments = 1;
  DotExpr dot = 2;
  repeated string args = 3;
}

// a dot expression, e.g. `proto.package`
message DotExpr {
  Comments comments = 1;
  string x = 2;
  string name = 3;
}

// A single starlark expression. May not be fully decomposed.
// Stores the string representation of the expression.
message StarExpr {
  Comments comments = 1;
  string expression = 2;
}

message IdentExpr {
  Comments comments = 1;
  string token = 2;
}

message Comments {
  repeated Comment before = 1;
  repeated Comment suffix = 2;
  repeated Comment after = 3;
}

message Comment {
  string token = 1;
}
