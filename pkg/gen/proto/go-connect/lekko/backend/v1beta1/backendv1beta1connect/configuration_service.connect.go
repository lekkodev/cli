// Copyright 2022 Lekko Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: lekko/backend/v1beta1/configuration_service.proto

package backendv1beta1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1beta1 "github.com/lekkodev/cli/pkg/gen/proto/go/lekko/backend/v1beta1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// ConfigurationServiceName is the fully-qualified name of the ConfigurationService service.
	ConfigurationServiceName = "lekko.backend.v1beta1.ConfigurationService"
)

// ConfigurationServiceClient is a client for the lekko.backend.v1beta1.ConfigurationService
// service.
type ConfigurationServiceClient interface {
	GetBoolValue(context.Context, *connect_go.Request[v1beta1.GetBoolValueRequest]) (*connect_go.Response[v1beta1.GetBoolValueResponse], error)
	GetIntValue(context.Context, *connect_go.Request[v1beta1.GetIntValueRequest]) (*connect_go.Response[v1beta1.GetIntValueResponse], error)
	GetFloatValue(context.Context, *connect_go.Request[v1beta1.GetFloatValueRequest]) (*connect_go.Response[v1beta1.GetFloatValueResponse], error)
	GetStringValue(context.Context, *connect_go.Request[v1beta1.GetStringValueRequest]) (*connect_go.Response[v1beta1.GetStringValueResponse], error)
	GetProtoValue(context.Context, *connect_go.Request[v1beta1.GetProtoValueRequest]) (*connect_go.Response[v1beta1.GetProtoValueResponse], error)
	GetJSONValue(context.Context, *connect_go.Request[v1beta1.GetJSONValueRequest]) (*connect_go.Response[v1beta1.GetJSONValueResponse], error)
	// Register is used to denote a RepositoryKey and namespaces within it
	// that a client is interested in so the server can cache and keep up to date.
	Register(context.Context, *connect_go.Request[v1beta1.RegisterRequest]) (*connect_go.Response[v1beta1.RegisterResponse], error)
	// Deregister is used to tell the server that a client is shutting down. It is not
	// required but preferable to have implementations call this once their lifecycle
	// has completed.
	Deregister(context.Context, *connect_go.Request[v1beta1.DeregisterRequest]) (*connect_go.Response[v1beta1.DeregisterResponse], error)
}

// NewConfigurationServiceClient constructs a client for the
// lekko.backend.v1beta1.ConfigurationService service. By default, it uses the Connect protocol with
// the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed requests. To use
// the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewConfigurationServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) ConfigurationServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &configurationServiceClient{
		getBoolValue: connect_go.NewClient[v1beta1.GetBoolValueRequest, v1beta1.GetBoolValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetBoolValue",
			opts...,
		),
		getIntValue: connect_go.NewClient[v1beta1.GetIntValueRequest, v1beta1.GetIntValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetIntValue",
			opts...,
		),
		getFloatValue: connect_go.NewClient[v1beta1.GetFloatValueRequest, v1beta1.GetFloatValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetFloatValue",
			opts...,
		),
		getStringValue: connect_go.NewClient[v1beta1.GetStringValueRequest, v1beta1.GetStringValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetStringValue",
			opts...,
		),
		getProtoValue: connect_go.NewClient[v1beta1.GetProtoValueRequest, v1beta1.GetProtoValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetProtoValue",
			opts...,
		),
		getJSONValue: connect_go.NewClient[v1beta1.GetJSONValueRequest, v1beta1.GetJSONValueResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/GetJSONValue",
			opts...,
		),
		register: connect_go.NewClient[v1beta1.RegisterRequest, v1beta1.RegisterResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/Register",
			opts...,
		),
		deregister: connect_go.NewClient[v1beta1.DeregisterRequest, v1beta1.DeregisterResponse](
			httpClient,
			baseURL+"/lekko.backend.v1beta1.ConfigurationService/Deregister",
			opts...,
		),
	}
}

// configurationServiceClient implements ConfigurationServiceClient.
type configurationServiceClient struct {
	getBoolValue   *connect_go.Client[v1beta1.GetBoolValueRequest, v1beta1.GetBoolValueResponse]
	getIntValue    *connect_go.Client[v1beta1.GetIntValueRequest, v1beta1.GetIntValueResponse]
	getFloatValue  *connect_go.Client[v1beta1.GetFloatValueRequest, v1beta1.GetFloatValueResponse]
	getStringValue *connect_go.Client[v1beta1.GetStringValueRequest, v1beta1.GetStringValueResponse]
	getProtoValue  *connect_go.Client[v1beta1.GetProtoValueRequest, v1beta1.GetProtoValueResponse]
	getJSONValue   *connect_go.Client[v1beta1.GetJSONValueRequest, v1beta1.GetJSONValueResponse]
	register       *connect_go.Client[v1beta1.RegisterRequest, v1beta1.RegisterResponse]
	deregister     *connect_go.Client[v1beta1.DeregisterRequest, v1beta1.DeregisterResponse]
}

// GetBoolValue calls lekko.backend.v1beta1.ConfigurationService.GetBoolValue.
func (c *configurationServiceClient) GetBoolValue(ctx context.Context, req *connect_go.Request[v1beta1.GetBoolValueRequest]) (*connect_go.Response[v1beta1.GetBoolValueResponse], error) {
	return c.getBoolValue.CallUnary(ctx, req)
}

// GetIntValue calls lekko.backend.v1beta1.ConfigurationService.GetIntValue.
func (c *configurationServiceClient) GetIntValue(ctx context.Context, req *connect_go.Request[v1beta1.GetIntValueRequest]) (*connect_go.Response[v1beta1.GetIntValueResponse], error) {
	return c.getIntValue.CallUnary(ctx, req)
}

// GetFloatValue calls lekko.backend.v1beta1.ConfigurationService.GetFloatValue.
func (c *configurationServiceClient) GetFloatValue(ctx context.Context, req *connect_go.Request[v1beta1.GetFloatValueRequest]) (*connect_go.Response[v1beta1.GetFloatValueResponse], error) {
	return c.getFloatValue.CallUnary(ctx, req)
}

// GetStringValue calls lekko.backend.v1beta1.ConfigurationService.GetStringValue.
func (c *configurationServiceClient) GetStringValue(ctx context.Context, req *connect_go.Request[v1beta1.GetStringValueRequest]) (*connect_go.Response[v1beta1.GetStringValueResponse], error) {
	return c.getStringValue.CallUnary(ctx, req)
}

// GetProtoValue calls lekko.backend.v1beta1.ConfigurationService.GetProtoValue.
func (c *configurationServiceClient) GetProtoValue(ctx context.Context, req *connect_go.Request[v1beta1.GetProtoValueRequest]) (*connect_go.Response[v1beta1.GetProtoValueResponse], error) {
	return c.getProtoValue.CallUnary(ctx, req)
}

// GetJSONValue calls lekko.backend.v1beta1.ConfigurationService.GetJSONValue.
func (c *configurationServiceClient) GetJSONValue(ctx context.Context, req *connect_go.Request[v1beta1.GetJSONValueRequest]) (*connect_go.Response[v1beta1.GetJSONValueResponse], error) {
	return c.getJSONValue.CallUnary(ctx, req)
}

// Register calls lekko.backend.v1beta1.ConfigurationService.Register.
func (c *configurationServiceClient) Register(ctx context.Context, req *connect_go.Request[v1beta1.RegisterRequest]) (*connect_go.Response[v1beta1.RegisterResponse], error) {
	return c.register.CallUnary(ctx, req)
}

// Deregister calls lekko.backend.v1beta1.ConfigurationService.Deregister.
func (c *configurationServiceClient) Deregister(ctx context.Context, req *connect_go.Request[v1beta1.DeregisterRequest]) (*connect_go.Response[v1beta1.DeregisterResponse], error) {
	return c.deregister.CallUnary(ctx, req)
}

// ConfigurationServiceHandler is an implementation of the
// lekko.backend.v1beta1.ConfigurationService service.
type ConfigurationServiceHandler interface {
	GetBoolValue(context.Context, *connect_go.Request[v1beta1.GetBoolValueRequest]) (*connect_go.Response[v1beta1.GetBoolValueResponse], error)
	GetIntValue(context.Context, *connect_go.Request[v1beta1.GetIntValueRequest]) (*connect_go.Response[v1beta1.GetIntValueResponse], error)
	GetFloatValue(context.Context, *connect_go.Request[v1beta1.GetFloatValueRequest]) (*connect_go.Response[v1beta1.GetFloatValueResponse], error)
	GetStringValue(context.Context, *connect_go.Request[v1beta1.GetStringValueRequest]) (*connect_go.Response[v1beta1.GetStringValueResponse], error)
	GetProtoValue(context.Context, *connect_go.Request[v1beta1.GetProtoValueRequest]) (*connect_go.Response[v1beta1.GetProtoValueResponse], error)
	GetJSONValue(context.Context, *connect_go.Request[v1beta1.GetJSONValueRequest]) (*connect_go.Response[v1beta1.GetJSONValueResponse], error)
	// Register is used to denote a RepositoryKey and namespaces within it
	// that a client is interested in so the server can cache and keep up to date.
	Register(context.Context, *connect_go.Request[v1beta1.RegisterRequest]) (*connect_go.Response[v1beta1.RegisterResponse], error)
	// Deregister is used to tell the server that a client is shutting down. It is not
	// required but preferable to have implementations call this once their lifecycle
	// has completed.
	Deregister(context.Context, *connect_go.Request[v1beta1.DeregisterRequest]) (*connect_go.Response[v1beta1.DeregisterResponse], error)
}

// NewConfigurationServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewConfigurationServiceHandler(svc ConfigurationServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetBoolValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetBoolValue",
		svc.GetBoolValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetIntValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetIntValue",
		svc.GetIntValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetFloatValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetFloatValue",
		svc.GetFloatValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetStringValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetStringValue",
		svc.GetStringValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetProtoValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetProtoValue",
		svc.GetProtoValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/GetJSONValue", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/GetJSONValue",
		svc.GetJSONValue,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/Register", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/Register",
		svc.Register,
		opts...,
	))
	mux.Handle("/lekko.backend.v1beta1.ConfigurationService/Deregister", connect_go.NewUnaryHandler(
		"/lekko.backend.v1beta1.ConfigurationService/Deregister",
		svc.Deregister,
		opts...,
	))
	return "/lekko.backend.v1beta1.ConfigurationService/", mux
}

// UnimplementedConfigurationServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedConfigurationServiceHandler struct{}

func (UnimplementedConfigurationServiceHandler) GetBoolValue(context.Context, *connect_go.Request[v1beta1.GetBoolValueRequest]) (*connect_go.Response[v1beta1.GetBoolValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetBoolValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) GetIntValue(context.Context, *connect_go.Request[v1beta1.GetIntValueRequest]) (*connect_go.Response[v1beta1.GetIntValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetIntValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) GetFloatValue(context.Context, *connect_go.Request[v1beta1.GetFloatValueRequest]) (*connect_go.Response[v1beta1.GetFloatValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetFloatValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) GetStringValue(context.Context, *connect_go.Request[v1beta1.GetStringValueRequest]) (*connect_go.Response[v1beta1.GetStringValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetStringValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) GetProtoValue(context.Context, *connect_go.Request[v1beta1.GetProtoValueRequest]) (*connect_go.Response[v1beta1.GetProtoValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetProtoValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) GetJSONValue(context.Context, *connect_go.Request[v1beta1.GetJSONValueRequest]) (*connect_go.Response[v1beta1.GetJSONValueResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.GetJSONValue is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) Register(context.Context, *connect_go.Request[v1beta1.RegisterRequest]) (*connect_go.Response[v1beta1.RegisterResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.Register is not implemented"))
}

func (UnimplementedConfigurationServiceHandler) Deregister(context.Context, *connect_go.Request[v1beta1.DeregisterRequest]) (*connect_go.Response[v1beta1.DeregisterResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("lekko.backend.v1beta1.ConfigurationService.Deregister is not implemented"))
}
